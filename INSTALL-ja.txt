/* Author: Guilherme de Campos Affonso (Guiga) */
/* Contact: jp.support@robotis.com */


//*********************************************************************/
//
// *********   DYNAMIXEL Mikata Arm 4DOF サンプルプログラム   *********/

このサンプルは以下のことを前提として書かれています。

1. 5つの DYNAMIXEL XM430-W350、あるいは XH430-V350を接続していること。それ以外の製品では弊社 e-Manual の各機種のコントロールテーブル (Control Table) を確認の上、必要な箇所を変更して下さい。
2. 各モーターのIDはベースリンク(基台取り付け側)から順に1から5となっていること。
3. 各モーターが Factory reset された状態であること。

このサンプルプログラムは Ubuntu 16.04 (x86_64), ROS kinetic, Dynamixel SDK 3.4.7 で動作検証しています。これ以外の環境では一部のコードの変更が必要になる可能性があります。

ご質問・ご意見などがありましたら、遠慮なくご連絡下さい。
    jp.support@robotis.com

//*********************************************************************/


/* STARTUP GUIDE */

Mikata Armを初めて使用する際は、以下の手順に沿ってソフトウェアのインストールと初期設定を行ってください。

1. ROS kinetic をインストールします。
   http://wiki.ros.org/kinetic/Installation/Ubuntu の指示に従って ros-kinetic-desktop をインストールします

2. 依存パッケージをインストールします。
   $ sudo apt-get install ros-kinetic-desktop-full ros-kinetic-dynamixel-sdk ros-kinetic-jsk-rviz-plugins python-catkin-tools libeigen3-dev

3. catkinワークスペースを作成し、本リポジトリをcloneしてbuildします。
  $ mkdir -p ~/mikata_arm_ws/src
  $ cd ~/mikata_arm_ws/src
  $ catkin_init_workspace
  $ git clone https://github.com/ROBOTIS-JAPAN-GIT/dynamixel_mikata_arm.git
  $ cd ..
  $ catkin build

4. USB2DXLの読み書き許可とlatencyを設定するため、udev rules を追加します。
  $ cd ~/mikata_arm_ws
  $ sudo cp src/dynamixel_mikata_arm/99-ftdi_sio.rules /etc/udev/rules.d/

5. 実機とPCを接続します。すでにUSB2DXLを接続していた場合は、挿し直してください。

6. インストレーションスクリプトを実行します。
  $ cd ~/mikata_arm_ws
  $ ./src/dynamixel_mikata_arm/install.sh

スクリプトがエラーなく終了すると、初期設定は完了です。


/* EXECUTE SAMPLE PROGRAM */

サンプルプログラムを実行するために、パッケージのsetup.bashをsourceします。

  $ cd ~/mikata_arm_ws
  $ source ./devel/setup.bash

次に、roslaunch や rosrun で各プログラムを実行します。bringup ノードを立ち上げると、ROSのトピックやサービスで Mikata Arm を動かすことができます。cli_control では、コマンドラインインターフェースにより実機を動かせたり、ティーチングやIKのデモを実行することができます。

例えば:

  ROS GUI版のサンプルプログラム実行方法
    $ roslaunch mikata_arm_bringup bringup.launch gui:=true
    bringup.launch の起動を待った後、rvizを起動。
    $ roslaunch mikata_arm_bringup rviz.launch
  

あるいは:

  CLI版のサンプルプログラム実行方法
    $ roscore
    $ rosrun mikata_arm_toolbox cli_control

ROS GUI版、CLI版の２つを同時に実行することはできませんのでご注意下さい。



/* PROGRAM EXPLANATION */


mikata_arm_bringup:

> bringup.launch : ROSのサンプルプログラムです。Mikata Arm を操作するためのトピックやサービスを立ち上げます。'gui' オプションで簡単なGUI操作が可能となります。

> rviz.launch : Mikata Arm をrvizで表示します。実行にはbringup.launchが必要となります。

> motion_player_rviz.launch : Mikata Arm と共に、 MotionPlayer に関する情報をrvizで表示します。


mikata_arm_toolbox:

> cli_control : コマンドラインインターフェースにより Mikata Arm を操作できます。各アクチュエータへの指令・情報取得だけでなく、ティーチングや逆運動学の例もあります。

> dxl_factory_reset : 全DYNAMIXELの初期化。

> dxl_setup : Mikata Arm の構造に合わせてDYNAMIXELの設定を変更します。cli_controlの実行には必要になります。

/*********************************************************************/

